<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.8.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- classpath:/spring/security-context.xml -->
	<!-- auto-config="true" 로그인페이지 / HTTP 인증 / 로그아웃 기능 자동설정 -->
	<!-- <security:http auto-config="true"> -->
	<security:http>
		<!-- url 요청 별 계정 권한 체크 -->
		<security:intercept-url pattern="/test/master" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/test/user" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/test/all" access="permitAll"/> 
	
		<security:form-login login-page="/login" 
							 login-processing-url="/login" 
							 username-parameter="u_id" 
							 password-parameter="u_pw"/>
							 
	    <security:logout 
	    		  logout-url="/logout" 
	    		  invalidate-session="true"
	    		  delete-cookies="browserCookie"/>
	    
	    <security:remember-me 
	    		  remember-me-parameter="userCookie" 
	    		  remember-me-cookie="browserCookie" 
	    		  token-validity-seconds="2419200"/>
		
		<!-- 
			error-if-maximum-exceeded="true"
			이미 로그인 한 대상이 있을 경우 2차 로그인 방지
			error-if-maximum-exceeded="false"
			기존 연결을 끊고 새로운 사용자 로그인
		 -->
		<!-- 중복 로그인 처리 -->
		<security:session-management>
			<security:concurrency-control
					 max-sessions="1"
					 error-if-maximum-exceeded="false" 
					 expired-url="/logoff"/>
		</security:session-management>
		
	</security:http>
	
	<bean id="customUserDetail" class="com.bitc.sec.security.CustomUserDetailService"/>
	<!-- NoOp No Operation 암호화 비교를 하지 않음. -->
	<!-- <bean class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/> -->
	<!-- SHA-256 함호화 방식 사용 -->
	<!-- <bean class="org.springframework.security.crypto.password.StandardPasswordEncoder"/> -->
	<bean id="bcryptEncoder" 
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetail">
			<security:password-encoder ref="bcryptEncoder"/>
		</security:authentication-provider>
	<!-- 
		<security:authentication-provider>
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="master" password="{noop}master" authorities="ROLE_ADMIN"/>			
			</security:user-service>
		</security:authentication-provider>
		 -->
	</security:authentication-manager>

</beans>










